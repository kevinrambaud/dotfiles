call plug#begin()

" Color scheme
Plug 'joshdick/onedark.vim'

Plug 'SirVer/ultisnips'

" Fuzzy finder
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" Use the sign column to indicate changes in a file managed by a VCS
Plug 'mhinz/vim-signify'

" Git wrapper with tons of commands
Plug 'tpope/vim-fugitive'

" Insert or delete brackets, parentheses or quotes in pair
Plug 'jiangmiao/auto-pairs'

" Make it easy to add, change or remove brackets, parentheses and more
Plug 'tpope/vim-surround'

" Comment and uncomment single line or selected block of code
Plug 'tpope/vim-commentary'

" Allow plugins map to be repeated with dot
Plug 'tpope/vim-repeat'

" Jump to any location specified by two characters
Plug 'justinmk/vim-sneak'

" Distraction free mode
Plug 'junegunn/goyo.vim'

" Set spaces, tabs and other settings per project
Plug 'editorconfig/editorconfig-vim'

" Highlight and remove extra whitespaces
Plug 'ntpeters/vim-better-whitespace'

" Make scrolling nice and smooth
Plug 'psliwka/vim-smoothie'

" Syntax color
Plug 'sheerun/vim-polyglot'

" Provide support for expanding abbreviations from emmet
Plug 'mattn/emmet-vim'

" Auto close tags
Plug 'alvan/vim-closetag'

" Light and configurable statusline and tabline
Plug 'itchyny/lightline.vim'

" Display indentation for spaces
Plug 'Yggdroot/indentLine'

" Display color for in css or html files
"Plug 'rrethy/vim-hexokinase', { 'do': 'make hexokinase' }

" Highlight current word
"Plug 'dominikduda/vim_current_word'

" Flutter
Plug 'dart-lang/dart-vim-plugin'
Plug 'thosakwe/vim-flutter'

call plug#end()

syntax on
colorscheme onedark

set autowrite
set number
set splitright
set termguicolors
set clipboard=unnamed
set backspace=indent,eol,start

" if hidden is not set, TextEdit might fail.
set hidden

" Some servers have issues with backup files, see #649
set nobackup
set nowritebackup

" Better display for messages
set cmdheight=1

" Smaller updatetime for CursorHold & CursorHoldI
set updatetime=100

" don't give |ins-completion-menu| messages.
set shortmess+=c

" always show signcolumns
set signcolumn=yes

" Smoother scrolling when moving horizontally
set sidescroll=1

" Show “invisible” characters
set lcs=tab:▏\ ,trail:·,nbsp:_
set list

set softtabstop=2
set tabstop=2
set shiftwidth=2
set expandtab

" Set leader shortcut to a comma ','. By default it's the backslash
let mapleader = " "

" Custom key mappings
imap jj <ESC>
map <C-n> :cnext<CR>
map <C-m> :cprevious<CR>
nnoremap <leader>a :cclose<CR>

" Move lines keymap
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" FZF settings
let $FZF_DEFAULT_OPTS=' --color=dark --color=fg:15,bg:-1,hl:1,fg+:#ffffff,bg+:0,hl+:1 --color=info:0,prompt:0,pointer:12,marker:4,spinner:11,header:-1 --layout=reverse  --margin=1,4'
let g:fzf_layout = { 'window': 'call FloatingFZF()' }

function! FloatingFZF()
  let buf = nvim_create_buf(v:false, v:true)
  call setbufvar(buf, '&signcolumn', 'no')

  let height = float2nr(10)
  let width = float2nr(80)
  let horizontal = float2nr((&columns - width) / 2)
  let vertical = 1

  let opts = {
        \ 'relative': 'editor',
        \ 'row': vertical,
        \ 'col': horizontal,
        \ 'width': width,
        \ 'height': height,
        \ 'style': 'minimal'
        \ }

  call nvim_open_win(buf, v:true, opts)
endfunction

nnoremap <silent> <C-p> :FZF -m<cr>

autocmd! FileType fzf
autocmd  FileType fzf set laststatus=0 noshowmode noruler
  \| autocmd BufLeave <buffer> set laststatus=2 showmode ruler

" Signify settings
let g:signify_sign_add = '▎'
let g:signify_sign_delete = '▶'
let g:signify_sign_delete_first_line = '▶'
let g:signify_sign_change = '▎'
let g:signify_sign_show_count = 0

highlight SignifySignAdd    		ctermfg=green  guifg=#587C0C cterm=NONE gui=NONE
highlight SignifySignChange 		ctermfg=blue   guifg=#0C7D9D cterm=NONE gui=NONE
highlight SignifySignDelete 		ctermfg=red    guifg=#94151B cterm=NONE gui=NONE
highlight SignifySignDeleteFirstLine 	ctermfg=red    guifg=#94151B cterm=NONE gui=NONE

" Netrw settings
let g:vim_markdown_folding_disabled = 1
let g:netrw_banner = 0

" Lightline settngs
let g:lightline = {
      \ 'colorscheme': 'onedark',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'fugitive#head'
      \ },
      \ }

" Resize splits when vim changes size (like with tmux opening/closing)
augroup auto-resize
  autocmd!
  autocmd VimResized * wincmd =
augroup END

let g:indentLine_enabled = 1
let g:indentLine_showFirstIndentLevel = 1
let g:indentLine_color_gui = '#3C4049'
let g:indentLine_char = '·'
let g:indentLine_first_char = '·'
"let g:indentLine_first_char = '▏'


" Polyglot settings
let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_operators = 1
let g:go_highlight_extra_types = 1

" Hexokinase settings
let g:Hexokinase_highlighters = [ 'virtual' ]
let g:Hexokinase_refreshEvents = [ 'BufRead', 'TextChangedI' ]

" Disable current word highlighting for specified files
autocmd BufAdd FZF* :let b:vim_current_word_disabled_in_this_buffer = 1

" Change cursor color
hi Cursor guifg=#528BFF guibg=#528BFF
hi Cursor2 guifg=#528BFF guibg=#528BFF
set guicursor=n-v-c:block-Cursor/lCursor,i-ci-ve:ver25-Cursor2/lCursor2,r-cr:hor20,o:hor50

" Flutter settings
let g:flutter_show_log_on_run = 1
